<div id="comments-list">
    {{#commentDtos}}
        <div class="card m-2" id="comments-{{id}}">
            <div class="card-header">
                {{nickname}}
                <!-- Button trigger modal -->
                <button type="button"
                        class="btn btm-sm btn-outline-primary"
                        data-bs-toggle="modal"
                        data-bs-target="#comment-edit-modal"
                        data-bs-id="{{id}}"
                        data-bs-nickname="{{nickname}}"
                        data-bs-body="{{body}}"
                        data-bs-article-id="{{articleId}}">수정</button>
                <!-- 삭제 버튼 -->
                <button type="button"
                        class="btn btm-sm btn-outline-danger comment-delete-btn"
                        data-comment-id="{{id}}">삭제</button>
            </div>
            <div class="card_body">
                {{body}}
            </div>
        </div>
    {{/commentDtos}}
</div>
<!-- Modal -->
<div class="modal fade" id="comment-edit-modal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h1 class="modal-title fs-5"
                    id="exampleModalLabel">댓글 수정</h1>
                <button type="button"
                        class="btn-close"
                        data-bs-dismiss="modal"
                        aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <!-- 댓글 수정 폼 -->
                <form>
                    <div class="mb-3">
                        <label class="form-label">닉네임</label>
                        <input type="text" class="form-control" id="edit-comment-nickname">
                    </div>
                    <div class="mb-3">
                        <label class="form-label">댓글 내용</label>
                        <textarea type="text" class="form-control" rows="3" id="edit-comment-body"></textarea>
                    </div>
                    {{#article}}
                        <input type="hidden" id="edit-comment-id">
                        <input type="hidden" id="edit-comment-article-id">
                    {{/article}}
                    <button type="button" class="btn btn-primary" id="comment-update-btn">수정완료</button>
                </form>
            </div>

        </div>
    </div>
</div>
<script>
    {
        //모달 선택
        const commentEditModal = document.querySelector("#comment-edit-modal");
        commentEditModal.addEventListener("show.bs.modal",function(event){
            //1.트리거버튼 선택
            const triggerBtn = event.relatedTarget;
            //2.데이터 가져오기
            const id = triggerBtn.getAttribute("data-bs-id");
            const nickname = triggerBtn.getAttribute("data-bs-nickname");
            const body = triggerBtn.getAttribute("data-bs-body");
            const articleId = triggerBtn.getAttribute("data-bs-article-id");
            //3.수정폼에 데이터 반영
            document.querySelector("#edit-comment-nickname").value = nickname;
            document.querySelector("#edit-comment-body").value = body;
            document.querySelector("#edit-comment-id").value = id;
            document.querySelector("#edit-comment-article-id").value = articleId;
        });
    }
    {
        //수정완료 버튼
        const commentUpdateBtn = document.querySelector("#comment-update-btn");
        //클릭이벤트
        commentUpdateBtn.addEventListener("click",function(){
            const comment = {
                id: document.querySelector("#edit-comment-id").value,
                nickname: document.querySelector("#edit-comment-nickname").value,
                body: document.querySelector("#edit-comment-body").value,
                article_id: document.querySelector("#edit-comment-article-id").value
            };
            console.log(comment);

            //수정 REST API호출
            const url = "/api/comments/" + comment.id ;
            fetch(url, {
                method: "PATCH",
                headers: {"Content-Type":"application/json"},
                body:JSON.stringify(comment)
            }).then(response => {
                const msg = (response.ok) ? "댓글이 수정되었습니다." : "댓글 수정 실패.!" ;
                alert(msg);
                window.location.reload();
            });
        });
    }
</script>

<!-- 댓글 삭제 -->
<script>
    {
        //삭제버튼 선택
        const commentDeleteBtns = document.querySelectorAll(".comment-delete-btn");

        //삭제버튼 이벤트 처리
        //commentDeleteBtn.addEventListener("click",function(){
        //    console.log("삭제 버튼이 클릭되었습니다.!");
        //});

        commentDeleteBtns.forEach(btn => {
            btn.addEventListener("click",(event) => {
                const commentDeleteBtn = event.target;
                const commentId = commentDeleteBtn.getAttribute("data-comment-id");
                console.log("삭제 버튼이 클릭되었습니다.! " + commentId + "번 댓글");

                const url = `/api/comments/${commentId}`;
                fetch(url, {
                    method: "DELETE"
                }).then(response => {
                    //삭제 실패
                    if (!response.ok) {
                        alert("댓글 삭제 실패..!");
                        return;
                    }
                    //삭제 성공 시 댓글을 화면에서 지우고 메시지 창 띄우기
                    const target = document.querySelector(`#comments-${commentId}`);
                    target.remove();
                    const msg = `${commentId}번 댓글을 삭제했습니다.`;
                    alert(msg);
                    window.location.reload();
                });
            });
        });
    }
</script>